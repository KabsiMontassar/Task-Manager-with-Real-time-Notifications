name: Combined CI/CD Pipeline

on:
  push:
    branches:
      - montassar # push to this branch will trigger the pipeline
  pull_request:
    branches:
      - main  # pull request to this branch will trigger the pipeline

env:
  REGISTRY: ghcr.io/KabsiMontassar   
  CREDENTIALS_ID: ${{ secrets.GITHUBTOKEN }}  

jobs:
  install-dependencies:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Gateway Dependencies
        uses: actions/cache@v4
        with:
          path: ./api-gateway/node_modules
          key: gateway-node-modules-${{ hashFiles('api-gateway/package-lock.json') }}
          restore-keys: gateway-node-modules-

      - name: Install dependencies for Gateway
        run: |
          cd api-gateway
          npm install

      - name: Cache Frontend Dependencies
        uses: actions/cache@v4
        with:
          path: ./frontend/node_modules
          key: frontend-node-modules-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: frontend-node-modules-

      - name: Install dependencies for Frontend
        run: |
          cd frontend
          npm install

      - name: Cache Task Service Dependencies
        uses: actions/cache@v4
        with:
          path: ./task-service/node_modules
          key: task-service-node-modules-${{ hashFiles('task-service/package-lock.json') }}
          restore-keys: task-service-node-modules-

      - name: Install dependencies for Task Service
        run: |
          cd task-service
          npm install

      - name: Cache User Service Dependencies
        uses: actions/cache@v4
        with:
          path: ./user-service/node_modules
          key: user-service-node-modules-${{ hashFiles('user-service/package-lock.json') }}
          restore-keys: user-service-node-modules-

      - name: Install dependencies for User Service
        run: |
          cd user-service
          npm install

  unit-test:
    runs-on: windows-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run unit tests for Gateway
        run: |
          cd gateway
          npm test

      - name: Run unit tests for Frontend
        run: |
          cd frontend
          npm test

      - name: Run unit tests for Task Service
        run: |
          cd task-service
          npm test

      - name: Run unit tests for User Service
        run: |
          cd user-service
          npm test

  build-and-push-docker-images:
    runs-on: windows-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUBTOKEN }}" | docker login ghcr.io -u <your-github-username> --password-stdin

      - name: Build and push Gateway image
        run: |
          cd gateway
          docker build -t $REGISTRY/gateway:latest .
          docker push $REGISTRY/gateway:latest

      - name: Build and push Frontend image
        run: |
          cd frontend
          docker build -t $REGISTRY/frontend:latest .
          docker push $REGISTRY/frontend:latest

      - name: Build and push Task Service image
        run: |
          cd task-service
          docker build -t $REGISTRY/task-service:latest .
          docker push $REGISTRY/task-service:latest

      - name: Build and push User Service image
        run: |
          cd user-service
          docker build -t $REGISTRY/user-service:latest .
          docker push $REGISTRY/user-service:latest
